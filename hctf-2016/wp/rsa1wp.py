
from hashlib import sha512
from Crypto.Util.number import *

import random

def cal_bit(num):
	num = int(num)
	l = len(bin(num))
	return l-2

def pi_b(x):
    bt = 536380958350616057242691418634880594502192106332317228051967064327642091297687630174183636288378234177476435270519631690543765125295554448698898712393467267006465045949611180821007306678935181142803069337672948471202242891010188677287454504933695082327796243976863378333980923047411230913909715527759877351702062345876337256220760223926254773346698839492268265110546383782370744599490250832085044856878026833181982756791595730336514399767134613980006467147592898197961789187070786602534602178082726728869941829230655559180178594489856595304902790182697751195581218334712892008282605180395912026326384913562290014629187579128041030500771670510157597682826798117937852656884106597180126028398398087318119586692935386069677459788971114075941533740462978961436933215446347246886948166247617422293043364968298176007659058279518552847235689217185712791081965260495815179909242072310545078116020998113413517429654328367707069941427368374644442366092232916196726067387582032505389946398237261580350780769275427857010543262176468343294217258086275244086292475394366278211528621216522312552812343261375050388129743012932727654986046774759567950981007877856194574274373776538888953502272879816420369255752871177234736347325263320696917012616273
    return inverse(x, bt)
c=0x7406516f4c27f0adf2e7ddeb348824a9dc3e47b06721a5f9c577a13444c619035f03ac891eda25e9519d007ea505763f9952890fa850d6ae741809f90f6e6956e893d938ffbb210f2c3faf8720c851ab5b166d4c159717cc4a6b935e87d320bdadf2d40bd1da8cfb41b032a53834891c5b895920f55b003247c96b6c883cdcb7dede056cfebfc46603e75ae066ee9a3a53b7efb1946742dfd60cef228814fdfb86e2458ba86ad0030d53eb4fb7f6dbf7612ddd2019ccc95fc428b7d1f169846e9b73665e7f4da0c81f012bf5ade9778fac4616926c2bdcf686995c5ae09bfa9058e87e83542031fb77169a924bd1e3729e715930995bea482beeaa5c9c3e911e719c88d476ad722b58092d7ce00021c9675a93451dfc0a4f9a15d71f632d7005919cc7e6aa08a10da59d0c09623986bcbac85ff30e6f98be8f781f8ee663b3d753fc381a36294eda6be48391fc5edde87e437c50837299a802d14404f64ba4b3d984daf38c12205dae7149c803269eccb2b007decff1e942339760d5f60b01bd6334399fb23aa175a4ed524f8fee2462f3e6d49411a81f3f4894129a366710369becee5cd4e328386d7e3966603dfda97d8bf7427178966816da3079babec88ad3d60006ce9e34bc7ee58e0f2be9f797209d6e30a735dc1dd117d8b91ac5fb9dfab2cdcccdaab2204338a2c7b2578370655a8fbd43d7b850079216eded4b9d13
e=0x3392f44411e8ef2bd827406a3d0e98c5bfd85d1bad691b22e2278408f5cbcab2aaa751fd1c086236e75859e958ab66e7e815b58af0d21666f47fe096535d7375db206e8232c978cf859199019021270316b8094014f637b910256c3612e9b06f913c53c941812204d07d206ffe61d274363dafaafcaf9e6f6f0db57870d5de986a2c5d01df0b3e5facc2c6a9891432e748d224bacfd0e0402ba325cf3f3950d42a8d76ac22d8e4fb6ada052a9f49b72c8b1442b030a3e2cc8b85e84d73283b3f71ada4ddcccf4facc480dd2f9b88c8028145eeb4446be85a969e9ebb23d10327abf6aab3426037e6feb4f325118ee91fe603bbda67c2984ed0a9154b9b3c80f7b45e22aab209d1edd5f9a0ef854a8fbbcb9af0853c0742e08fc47f8259c93be6c734edbd1f7594a825f15c800e45fbec88aa477bf3dfcc8d9d9cb0f909af026d0ce6108b26f583fced9d10608ea3ab9a469db58448f387d6837a9bb1913cab5edebd44d7b716c2c791f267ca288a43223655327bfdbcfea691a47d8ec5a12d538bd3220268251719eba23691d3296afc044cf23e94acc53345981277131508ab4589ba6d70f6be20987a5a9ccea1b299802d995fe3ebc8caac5206c6925307b85ab67f7a3038aa26cf7a6f0136361a9a0ed7dc4a66ba85a0fb343072dad0856d45201cc36f73eb3b91acb079fc0e79be9b9f817e956fab13b1df25cc48ea6811
n=0xaeee4e853ab681e84e37779940d3dc104626bfa081c64e2116e736490307b3dfdfd4f2b4a12f741e8aabd49f16a748f2bc36a4ba4d3c2c176067322c10481911ca62fc09ac6e371fb9152436e2b76398e206c617c9d664f9649049a4f06e1b969e11e9fd61f89022f16932083926e572ebb647d449eb941bea2151328598c3516d790f32e896b6708dd43e8eb27b02e97a1bb0698531d0cc96761180103a734a33beebbd1723901dfa5926efb9e402a87927e32ddf096b6b47c3434e0976bc2cc78b318ec5e684d43f813df0692a57a25fa979c67f6f29ab9a879e819c0c6256b092a59ad320ba5ae8402f916577e60316cc6cc946986edadca30e1b26b7d877c54e98e1bc9ad6741e21355657716fe089f7078dab4db29938ddd1fad4af1c7b8ff4350835037874fd7b359310ec76921e18e4f66e0b7ac93e8b327ffcc16735a2b64105c78276992070bb178f920ecdb82e287e87a648302f011de7fd83738c7926973ab71659b65b288bb37358c313813f80e173cd49e6660d31f78b8d752a035e6a0afb835fa312d160bb4007ce83b272e726dceb6cbe29d22d16ee11574c623b8bcfd2f61681fe3980e9678886b94f72a656c78bd90aa3678327b8cea3d187b23008a8940d2a8b0f2e22d90b7eb03e4af2293d4d2d873b9000f01169a5bbfe5b395fc4044ea466d54154a9ee2edc27b9168fed0ea1437930ad660ec5893b

t=pi_b(e)

print (t)

u = 635821529680195135762764580469712102227079712509439315709707250068244306824901048037194443713893895523592044345391463141571376852251284938658346605353539091005530521757504495956453583480068101247020278123507287550560428349147303038190797464013872502380786941261054616353653723871
bt = 536380958350616057242691418634880594502192106332317228051967064327642091297687630174183636288378234177476435270519631690543765125295554448698898712393467267006465045949611180821007306678935181142803069337672948471202242891010188677287454504933695082327796243976863378333980923047411230913909715527759877351702062345876337256220760223926254773346698839492268265110546383782370744599490250832085044856878026833181982756791595730336514399767134613980006467147592898197961789187070786602534602178082726728869941829230655559180178594489856595304902790182697751195581218334712892008282605180395912026326384913562290014629187579128041030500771670510157597682826798117937852656884106597180126028398398087318119586692935386069677459788971114075941533740462978961436933215446347246886948166247617422293043364968298176007659058279518552847235689217185712791081965260495815179909242072310545078116020998113413517429654328367707069941427368374644442366092232916196726067387582032505389946398237261580350780769275427857010543262176468343294217258086275244086292475394366278211528621216522312552812343261375050388129743012932727654986046774759567950981007877856194574274373776538888953502272879816420369255752871177234736347325263320696917012616273

x = t*u/ n
rest = 2

b = t*u-1
while rest != 0:
    rest = b % x
    x = x + 1

phi_n=b/(x-1)
d=inverse(e,phi_n)
m=pow(c, d, n)
print (long_to_bytes(m))




































