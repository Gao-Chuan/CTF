
from Crypto.Util.number import getPrime, long_to_bytes, bytes_to_long, isPrime, size, inverse
from Crypto.Cipher import DES

key = "abcdefg1"
k = 2048
e = 0x10001

def pi_b(x, m):
    '''
    m:
        1: encrypt
        0: decrypt
    ''' 
    enc = DES.new(key)
    if m:
        method = enc.encrypt
    else:
        method = enc.decrypt
    s = long_to_bytes(x)
    sp = [s[a:a+8] for a in xrange(0, len(s), 8)]
    r = ""
    for a in sp:
        r += method(a)
    return bytes_to_long(r)

n = 0x97550b974810279d0c2978ee57241921a6a58b0bfdc9d49e9a9d4fb7acf4fd009b437eeba09aafde864f5c80cac12a393e909e9cdf17a892bd97d88a9040b341a2f82400b202c4653d420d04c3096463b47aed67b6cef2f6b64a49dd0b0c730430f18e2eb6bef65efcb1d8e9608f58a73264eabd00cfe072964402c55d79259223e7c9f4cf19a37751cdb93bb2f839beeeae2492177c2e54d2488df52f45742d7e5560ab797738d83d94b74a32cdff114e76796adb7ecf82aab8d4b10f07f9491605e941645a0a727c4546f32efe41f96a1302ff8f817d9f0efdbd332e3b3a510ca3fc8a2bb2c47b99539183ff768ce05b137cedae791fcb9e905dd8abc3c23dL
e = 0x10001
e2 = 0x8671
u = int(bin(n)[2+128:2+128+640], 2)
p4 = pi_b(u, 0)

q = 169649596706361919830882771179653435754133594277658691627148036367477113876661064139067087653543238852037862595907634195495487359299863094938188447473310984868284538064271119650396270339806314510219910928053438299228655419800953642095097354129292193791319712141072894432083435990075316736994672801523162622771
p = n/q
fn = (p-1)*(q-1)

flag = 0x913403d56fbec8622c1254067fb42b08e72cf73cac121c6c5e3219a9df9dec236338dc621220004ab8fadae3a7141e1b2e38c75cbe48b48c0a4e7848d6cb2035bcca9d5ac98caaafe61922fc92604bc72857ed1949e6fef20d69faabebc88e9da502e3f4eec7cb18a66603c2a83b18ab2f772971d8d89ba25fe44328b1331b341d873b6fd47cb6151fd81d10117cad5939ab3700e9a055e907e8a35403acfb542bd165637a3c8d5f2477cbdc160423b64159b28a7bd4cab1fd88b426d8afae12e9dbd39e0247255cf6a50239908e94a370fd6e4cee22a940160a829b4f9916b571909970829f41652f79905233d487b2f84de39f13413dbd857a64138969f217L

d2 = inverse(e2, fn)

print long_to_bytes(pow(flag, d2, n))